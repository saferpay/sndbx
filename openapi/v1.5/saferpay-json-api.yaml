swagger: '2.0'
info:
  description: Saferpay JSON API
  version: 1.5.0
  title: Saferpay JSON API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: payment-page
    description: Payment page calls
  - name: transaction
    description: Transaction calls
schemes:
  - https
paths:
  /PaymentPage/Initialize:
    post:
      tags:
        - payment-page
      summary: Payment page initialize
      description: >-
        This interface provides a simple integration of Saferpay without the
        need to implement a user interface for card data entry (the 'eCommerce'
        Saferpay license). You will get a redirect link to our payment page.
        After the payment page processing was finished, the payer is redirected
        back to the shop. The redirect address is chosen depending on the
        outcome of the request (success, failure, abort). If the payer is
        returned to the success url provided in the InitializeRequest, an
        authorization or even a completed transaction will have been done. So
        even if you don’t call Verify or Capture, the financial flow may have
        been triggered (depending on the payment provider – please consult the
        provider specific information). Important -> the payer might modify the
        return address (e.g. replace failure address with success url). If the
        payer returns to your success url, be sure to retrieve the outcome of
        the transaction and more information on it by calling PaymentPage/Verify
        Assert for the given token.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: PaymentPageInitializeRequest
          required: true
          description: Payment page initialize request
          schema:
            $ref: '#/definitions/PaymentPageInitializeRequest'
      responses:
        '200':
          description: OK (No error)
          schema:
            $ref: '#/definitions/PaymentPageInitializeResponse'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '401':
          description: Authentication of the request failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '402':
          description: Requested action failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '403':
          description: Access denied
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '406':
          description: Not acceptable (wrong accept header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '415':
          description: Unsupported media type (wrong content-type header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '500':
          description: Internal error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
  /PaymentPage/Assert:
    post:
      tags:
        - payment-page
      summary: Payment page assert
      description: >-
        Call this function to safely check the status of the transaction from
        your server. Depending on the payment provider, the resulting
        transaction may either be an authorization or may already be captured
        (meaning the financial flow was already triggered). This will be visible
        in the status of the transaction container returned in the response. If
        the transaction failed (the payer was redirected to the Fail url or he
        manipulated the return url), an error response with an http status code
        400 or higher containing an error message will be returned providing
        some information on the transaction failure.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: PaymentPageAssertRequest
          required: true
          description: Payment page assert request
          schema:
            $ref: '#/definitions/PaymentPageAssertRequest'
      responses:
        '200':
          description: OK (No error)
          schema:
            $ref: '#/definitions/PaymentPageAssertResponse'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '401':
          description: Authentication of the request failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '402':
          description: Requested action failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '403':
          description: Access denied
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '406':
          description: Not acceptable (wrong accept header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '415':
          description: Unsupported media type (wrong content-type header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '500':
          description: Internal error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
  /Transaction/Initialize:
    post:
      tags:
        - transaction
      summary: Transaction Initialize
      description: >-
        This method may be used to start a transaction which may involve either
        DCC and / or 3d-secure.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: TransactionInitializeRequest
          required: true
          description: Transaction Initialize request
          schema:
            $ref: '#/definitions/TransactionInitializeRequest'
      responses:
        '200':
          description: OK (No error)
          schema:
            $ref: '#/definitions/TransactionInitializeResponse'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '401':
          description: Authentication of the request failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '402':
          description: Requested action failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '403':
          description: Access denied
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '406':
          description: Not acceptable (wrong accept header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '415':
          description: Unsupported media type (wrong content-type header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '500':
          description: Internal error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
  /Transaction/Authorize:
    post:
      tags:
        - transaction
      summary: Transaction Authorize
      description: >-
        This function may be called to complete an authorization which was
        started by a call to Transaction/Initialize.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: TransactionAuthorizeRequest
          required: true
          description: Transaction Authorize request
          schema:
            $ref: '#/definitions/TransactionAuthorizeRequest'
      responses:
        '200':
          description: OK (No error)
          schema:
            $ref: '#/definitions/TransactionAuthorizeResponse'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '401':
          description: Authentication of the request failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '402':
          description: Requested action failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '403':
          description: Access denied
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '406':
          description: Not acceptable (wrong accept header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '415':
          description: Unsupported media type (wrong content-type header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '500':
          description: Internal error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
  /Transaction/Capture:
    post:
      tags:
        - transaction
      summary: Transaction Capture
      description: >-
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: TransactionCaptureRequest
          required: true
          description: Transaction Capture request
          schema:
            $ref: '#/definitions/TransactionCaptureRequest'
      responses:
        '200':
          description: OK (No error)
          schema:
            $ref: '#/definitions/TransactionCaptureResponse'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '401':
          description: Authentication of the request failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '402':
          description: Requested action failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '403':
          description: Access denied
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '406':
          description: Not acceptable (wrong accept header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '415':
          description: Unsupported media type (wrong content-type header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '500':
          description: Internal error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
  /Transaction/AuthorizeDirect:
    post:
      tags:
        - transaction
      summary: Transaction Authorize Direct
      description: >-
        This function may be used to directly authorize transactions which
        do not require a redirect of the customer (e.g. direct debit or
        recurring transactions based on a previously registered alias).
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: TransactionAuthorizeDirect
          required: true
          description: Transaction Authorize Direct request
          schema:
            $ref: '#/definitions/TransactionAuthorizeDirectRequest'
      responses:
        '200':
          description: OK (No error)
          schema:
            $ref: '#/definitions/TransactionAuthorizeDirectResponse'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '401':
          description: Authentication of the request failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '402':
          description: Requested action failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '403':
          description: Access denied
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '406':
          description: Not acceptable (wrong accept header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '415':
          description: Unsupported media type (wrong content-type header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '500':
          description: Internal error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
  /Transaction/Refund:
    post:
      tags:
        - transaction
      summary: Transaction Refund
      description: >-
        This method may be called to refund a previous transaction.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: TransactionRefund
          required: true
          description: Transaction Refund request
          schema:
            $ref: '#/definitions/TransactionRefundRequest'
      responses:
        '200':
          description: OK (No error)
          schema:
            $ref: '#/definitions/TransactionRefundResponse'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '401':
          description: Authentication of the request failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '402':
          description: Requested action failed
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '403':
          description: Access denied
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '406':
          description: Not acceptable (wrong accept header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '415':
          description: Unsupported media type (wrong content-type header)
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
        '500':
          description: Internal error
          schema:
            $ref: '#/definitions/SaferpayErrorMessage'
definitions:
  TransactionRefundRequest:
    required:
      - RequestHeader
      - Refund
      - TransactionReference
    properties:
      RequestHeader:
        $ref: '#/definitions/RequestHeader'
      Refund:
        $ref: '#/definitions/Refund'
      TransactionReference:
        $ref: '#/definitions/TransactionReference'
      PendingNotification:
        $ref: '#/definitions/PendingNotification'
  TransactionRefundResponse:
    required:
      - ResponseHeader
      - Transaction
      - PaymentMeans
    properties:
      ResponseHeader:
        $ref: '#/definitions/ResponseHeader'
      Transaction:
        $ref: '#/definitions/Transaction'
      PaymentMeans:
        $ref: '#/definitions/PaymentMeans'
      Dcc:
        $ref: '#/definitions/Dcc'
  TransactionAuthorizeDirectRequest:
    required:
      - RequestHeader
      - TerminalId
      - Payment
      - PaymentMeans
    properties:
      RequestHeader:
        $ref: '#/definitions/RequestHeader'
      TerminalId:
        description: Saferpay Terminal-Id. Numeric[8..8]
        type: string
        example: 12341234
      Payment:
        $ref: '#/definitions/Payment'
      PaymentMeans:
        $ref: '#/definitions/PaymentMeans'
      RegisterAlias:
        $ref: '#/definitions/PendingNotification'
      Payer:
        $ref: '#/definitions/Payer'
  TransactionAuthorizeDirectResponse:
    required:
      - ResponseHeader
      - Transaction
      - PaymentMeans
    properties:
      ResponseHeader:
        $ref: '#/definitions/ResponseHeader'
      Transaction:
        $ref: '#/definitions/Transaction'
      PaymentMeans:
        $ref: '#/definitions/PaymentMeans'
      Payer:
        $ref: '#/definitions/Payer'
      RegistrationResult:
        $ref: '#/definitions/RegistrationResult'
  TransactionCaptureRequest:
    required:
      - RequestHeader
      - TransactionReference
    properties:
      RequestHeader:
        $ref: '#/definitions/RequestHeader'
      TransactionReference:
        $ref: '#/definitions/TransactionReference'
      Amount:
        $ref: '#/definitions/Amount'
      Billpay:
        $ref: '#/definitions/Billpay'
      Partial:
        $ref: '#/definitions/Partial'
      PendingNotification:
        $ref: '#/definitions/PendingNotification'
  TransactionCaptureResponse:
    required:
      - ResponseHeader
      - TransactionId
      - Status
    properties:
      ResponseHeader:
        $ref: '#/definitions/ResponseHeader'
      TransactionId:
        type: string
        description: Id of the referenced transaction
        example: 723n4MAjMdhjSAhAKEUdA8jtl9jb
      OrderId:
        type: string
        description: OrderId of the referenced transaction. If present.
        example: c52ad18472354511ab2c33b59e796901
      Status:
        type: string
        description: Current status of the capture.
        example: PENDING, CAPTURED.
      Date:
        type: string
        format: date-time
        description: >-
          Date and time of capture. Not set if the capture state is pending.
        example: '2014-04-25T08:33:44.159Z'
      Invoice:
        $ref: '#/definitions/Invoice'
  TransactionAuthorizeRequest:
    required:
      - RequestHeader
      - Token
    properties:
      RequestHeader:
        $ref: '#/definitions/RequestHeader'
      Token:
        type: string
        description: Token returned by Initialize
        example: 234uhfh78234hlasdfh8234e
      Condition:
        type: string
        description:
          WITH_LIABILITY_SHIFT - the authorization will be executed if the
          previous 3d-secure process indicates that the liability shift to the
          issuer is possible (liability shift may still be declined with the
          authorization though). This condition will be ignored for brands which
          Saferpay does not offer 3d-secure for.^

          If left out, the authorization will be done if allowed, but possibly
          without liability shift to the issuer. See the specific result codes
          in the response message.
        example: WITH_LIABILITY_SHIFT
      VerificationCode:
        type: string
        description: Card verification code if available
        example: 123
      RegisterAlias:
        $ref: '#/definitions/RegisterAlias'

  TransactionAuthorizeResponse:
    required:
      - ResponseHeader
      - Transaction
      - PaymentMeans
    properties:
      ResponseHeader:
        $ref: '#/definitions/ResponseHeader'
      Transaction:
        $ref: '#/definitions/Transaction'
      PaymentMeans:
        $ref: '#/definitions/PaymentMeans'
      Payer:
        $ref: '#/definitions/Payer'
      RegistrationResult:
        $ref: '#/definitions/RegistrationResult'
      ThreeDs:
        $ref: '#/definitions/ThreeDs'
      Dcc:
        $ref: '#/definitions/Dcc'
  TransactionInitializeRequest:
    required:
      - RequestHeader
      - TerminalId
      - Payment
      - ReturnUrls
    properties:
      RequestHeader:
        $ref: '#/definitions/RequestHeader'
      ConfigSet:
        type: string
        example: my-config
      TerminalId:
        description: Saferpay Terminal-Id. Numeric[8..8]
        type: string
        example: 12341234
      Payment:
        $ref: '#/definitions/Payment'
      PaymentMeans:
        $ref: '#/definitions/TransactionInitializePaymentMeans'
      Payer:
        $ref: '#/definitions/Payer'
      ReturnUrls:
        $ref: '#/definitions/ReturnUrls'
      Styling:
        $ref: '#/definitions/Styling'
      Wallets:
        type: array
        items:
          type: string
        description: >-
          Used to control if wallets should be enabled on the payment selection
          page and to go directly to the given wallet (if exactly one wallet is
          filled and PaymentMethods is not set). Possible values -> MASTERPASS.
        example: MASTERPASS
  TransactionInitializeResponse:
    required:
      - ResponseHeader
      - Token
      - Expiration
      - RedirectRequired
    properties:
      ResponseHeader:
        $ref: '#/definitions/ResponseHeader'
      Token:
        type: string
        description: Token for later referencing
        example: 234uhfh78234hlasdfh8234e1234
      Expiration:
        type: string
        format: date-time
        description: >-
          Expiration date / time of the generated token in ISO 8601 format in
          UTC. After this time, the token won’t be accepted for any further
          action.
        example: '2011-07-14T18:43:37.000Z'
      LiabilityShift:
        type: boolean
        description: >-
          Indicates if liability shift to issuer is possible or not. Not
          present if PaymentMeans container was not present in
          InitializeTransaction request. True, if liability shift to issuer is
           possible, false if not.
      RedirectRequired:
        type: boolean
        description: >-
          True if a redirect must be performed to continue, false otherwise
      Redirect:
        $ref: '#/definitions/Redirect'
  PaymentPageInitializeRequest:
    required:
      - RequestHeader
      - ReturnUrls
      - TerminalId
      - Payment
    properties:
      RequestHeader:
        $ref: '#/definitions/RequestHeader'
      ConfigSet:
        type: string
        example: my-config
      TerminalId:
        type: string
        example: 12345678
      Payment:
        $ref: '#/definitions/Payment'
      PaymentMethods:
        type: array
        items:
          type: string
        description: >-
          Used to restrict the means of payment which are available to the payer
          for this transaction. If only one payment method id is set, the
          payment selection step will be skipped. Possible values -> AMEX,
          BANCONTACT, BONUS, DINERS, DIRECTDEBIT, EPRZELEWY, EPS, GIROPAY,
          IDEAL, INVOICE, JCB, MAESTRO, MASTERCARD, MYONE, PAYPAL, PAYDIREKT,
          POSTCARD, POSTFINANCE, SAFERPAYTEST, SOFORT, VISA, VPAY.
        example: VISA
      Wallets:
        type: array
        items:
          type: string
        description: >-
          Used to control if wallets should be enabled on the payment selection
          page and to go directly to the given wallet (if exactly one wallet is
          filled and PaymentMethods is not set). Possible values -> MASTERPASS.
        example: MASTERPASS
      Payer:
        $ref: '#/definitions/Payer'
      RegisterAlias:
        $ref: '#/definitions/RegisterAlias'
      ReturnUrls:
        $ref: '#/definitions/ReturnUrls'
      Notification:
        $ref: '#/definitions/Notification'
      Styling:
        $ref: '#/definitions/Styling'
      BillingAddressForm:
        $ref: '#/definitions/AddressForm'
      DeliveryAddressForm:
        $ref: '#/definitions/AddressForm'
      CardForm:
        $ref: '#/definitions/CardForm'
  PaymentPageInitializeResponse:
    required:
      - ResponseHeader
      - Token
      - Expiration
      - RedirectUrl
    properties:
      ResponseHeader:
        $ref: '#/definitions/ResponseHeader'
      Token:
        type: string
        description: Token for later referencing
        example: 234uhfh78234hlasdfh8234e1234
      Expiration:
        type: string
        format: date-time
        description: >-
          Expiration date / time of the generated token in ISO 8601 format in
          UTC. After this time, the token won’t be accepted for any further
          action.
        example: '2011-07-14T18:43:37.000Z'
      RedirectUrl:
        type: string
        description: >
          Redirecturl for the payment page transaction. Simply add this to a
          "Pay Now"-button or do an automatic redirect.
        example: >-
          https://www.saferpay.com/vt2/api/PaymentPage/1234/12341234/z2p7a0plpgsd41m97wjvm5jza
  RequestHeader:
    description: Contains general informations about the response.
    required:
      - SpecVersion
      - CustomerId
      - RequestId
      - RetryIndicator
    properties:
      SpecVersion:
        type: string
        example: '1.3'
      CustomerId:
        type: string
        example: '123123'
      RequestId:
        type: string
        example: 33e8af17-35c1-4165-a343-c1c86a320f3b
      RetryIndicator:
        type: integer
        example: 0
      ClientInfo:
        $ref: '#/definitions/ClientInfo'
  ResponseHeader:
    required:
      - SpecVersion
      - RequestId
    properties:
      SpecVersion:
        type: string
        example: '1.3'
      RequestId:
        type: string
        example: 33e8af17-35c1-4165-a343-c1c86a320f3b
  ClientInfo:
    properties:
      ShopInfo:
        type: string
        example: My Shop
      OsInfo:
        type: string
        example: Linux
  Payment:
    required:
      - Amount
      - Description
    properties:
      Amount:
        $ref: '#/definitions/Amount'
      OrderId:
        type: string
        description: >-
          Unambiguous order identifier defined by the merchant/ shop. This
          identifier might be used as reference later on.
        example: c52ad18472354511ab2c33b59e796901
      Description:
        type: string
        description: >-
          A human readable description provided by the merchant that will be
          displayed in Payment Page.
        example: Description of payment
      PayerNote:
        type: string
        description: >-
          Text which will be printed on payere's debit note. Supported by SIX
          Acquiring. No guarantee, that it will show up on the payer's debit
          note, because his bank has to support it too. Please note, that
          maximum allowed characters are rarely supported. It's usually around
          10-12.
        example: Payernote
      MandateId:
        type: string
        description: >-
          Mandate reference of the payment. Needed for German direct debits
          (ELV) only. The value has to be unique.
        example: MandateId
      Options:
        $ref: '#/definitions/PaymentOptions'
      Recurring:
        $ref: '#/definitions/Recurring'
      Installment:
        $ref: '#/definitions/Installment'
  Amount:
    required:
      - Value
      - CurrencyCode
    properties:
      Value:
        type: string
        example: 100
        description: Amount in minor unit (CHF 1.00 ⇒ Value=100)
      CurrencyCode:
        type: string
        example: CHF
        description: 'ISO 4217 3-letter currency code (CHF, USD, EUR, ...)'
  Billpay:
    description: Optional Billpay specific options.
    properties:
      DelayInDays:
        type: integer
        example: 10
        description: Number of days to delay the due date of the invoice / direct debit (see billpay for specifics)
  PaymentOptions:
    description: Specific payment options
    properties:
      PreAuth:
        type: boolean
        description: >-
          Used to flag the transaction as a Pre-Athorization. This type of
          transaction is only supported with the following Acquiring -> SIX
          Payment Services, B+S Card Service, ConCardis, Airplus and -after an
          agreement- with American Express.
  Recurring:
    required:
      - Initial
    properties:
      Initial:
        type: boolean
        description: >-
          If set to true, the authorization may later be referenced for
          recurring followup transactions.
    description: Recurring options – cannot be combined with Installment.
  Installment:
    description: Installment options – cannot be combined with Recurring.
    required:
      - Initial
    properties:
      Initial:
        type: boolean
        description: >-
          If set to true, the authorization may later be referenced for
          installment followup transactions.
  Payer:
    description: Information on the payer (IP-address)
    properties:
      IpAddress:
        type: string
        description: >-
          IPv4 address of the card holder / payer if available. Dotted quad
          notation.
        example: 111.111.111.111
      LanguageCode:
        type: string
        description: Language to be used if Saferpay displays something to the payer.
        example: de
      DeliveryAddress:
        $ref: '#/definitions/Address'
      BillingAddress:
        $ref: '#/definitions/Address'
  ResponsePayer:
    description: Information on the payer (IP-address)
    properties:
      IpAddress:
        type: string
        description: >-
          IPv4 address of the card holder / payer if available. Dotted quad
          notation.
        example: 111.111.111.111
      IpLocation:
        type: string
        description: The location the IpAddress, if available. This might be a valid country code or a special value for 'non-country' locations (anonymous proxy, satellite phone, ...).
        example: NZ
      DeliveryAddress:
        $ref: '#/definitions/Address'
      BillingAddress:
        $ref: '#/definitions/Address'
  Address:
    properties:
      FirstName:
        type: string
        description: The payers first name
        example: John
      LastName:
        type: string
        description: The payers last name
        example: Doe
      DateOfBirth:
        type: string
        description: The payers date of birth in ISO 8601 extended date notation YYYY-MM-DD
        example: '1990-05-31T00:00:00.000Z'
      Company:
        type: string
        description: The payers company
        example: ACME Corp.
      Gender:
        type: string
        description: 'The payers gender Possible values -> MALE, FEMALE, COMPANY.'
        example: COMPANY
      LegalForm:
        type: string
        description: 'The payers legal form Possible values -> AG, GmbH, Misc.'
        example: AG
      Street:
        type: string
        description: The payers street
        example: Bakerstreet 32
      Street2:
        type: string
        description: >-
          The payers street, second line. Only use this, if you need two lines.
          It may not be supported by all acquirers.
        example: Stewart House
      Zip:
        type: string
        description: The payers zip code
        example: 8000
      City:
        type: string
        description: The payers city
        example: Zurich
      CountrySubdivisionCode:
        type: string
        description: >-
          The payers country subdivision code. ISO 3166-2 country subdivision
          code
        example: ZH
      CountryCode:
        type: string
        description: >-
          The payers country subdivision code ISO 3166-1 alpha-2 country code
          Alphabetic[2..2]
        example: CH
      Phone:
        type: string
        description: 'The payers phone number Utf8[1..100]'
        example: +41 12 345 6789
      Email:
        type: string
        description: The payers email
        example: payer@provider.com
  RegisterAlias:
    description: >-
      If the given means of payment should be stored in Saferpay Secure Card
      Data storage (if applicable)
    required:
      - IdGenerator
    properties:
      IdGenerator:
        type: string
        description: >-
          Id generator to be used by Saferpay. 'circle' only if configured for
          this merchant. Possible values -> MANUAL, RANDOM, RANDOM_UNIQUE.
        example: manual
      Id:
        type: string
        description: >-
          Alias id to be used for registration if not generated by Saferpay.
          Mandatory if IdGenerator is 'manual'. This value is case-insensitive.
          Id[1..40]
        example: alias35nfd9mkzfw0x57iwx
      Lifetime:
        type: integer
        description: >-
          Number of days this card is to be stored within Saferpay. If not
          filled, the standard lifetime will be used. Range -> inclusive between
          1 and 1600
        example: 1000
  ReturnUrls:
    required:
      - Success
      - Fail
      - Abort
    description: >-
      Urls which are to be used to redirect the payer back to the shop if the
      transaction requires some kind of browser redirection (3d-secure, dcc)
      These Urls are used by Saferpay to redirect the shopper back to the
      merchant shop. You may add query string parameters to identify your
      session, but please be aware that the shopper could modify these
      parameters inside the browser! The whole url including query string
      parameters should be as short as possible to prevent issues with specific
      browsers and must not exceed 2000 characters. Note-> you should not add
      sensitive data to the query string, as its contents is plainly visible
      inside the browser and will be logged by our web servers.
    properties:
      Success:
        type: string
        description: Return url for successful transaction
        example: 'https://merchanthost/success'
      Fail:
        type: string
        description: Return url for failed transaction
        example: 'https://merchanthost/fail'
      Abort:
        type: string
        description: Return url for transaction aborted by the payer.
        example: 'https://merchanthost/abort'
  Notification:
    description: Notification options
    properties:
      MerchantEmail:
        type: string
        description: >-
          Email address to which a confirmation email will be sent for
          successful authorizations.
        example: merchant@saferpay.com
      PayerEmail:
        type: string
        description: >-
          Email address to which a confirmation email will be sent for
          successful authorizations.
        example: merchant@saferpay.com
      NotifyUrl:
        type: string
        description: >-
          Url to which Saferpay will send the asynchronous confirmation for the
          transaction. Supported schemes are http and https. You also have to
          make sure to support the GET-method.
        example: 'https://merchanthost/notify'
  Styling:
    description: Styling options
    properties:
      CssUrl:
        type: string
        description: >-
          Custom styling resource (url) which will be referenced in web pages
          displayed by Saferpay to apply your custom styling. This file must be
          hosted on a SSL/TLS secured web server (the url must start with
          https://).
        example: 'https://merchanthost/merchant.css'
      ContentSecurityEnabled:
        type: boolean
        description: >-
          When enabled, then ContentSecurity/SAQ-A is requested, which leads to
          the CSS being loaded from the saferpay server.
      Theme:
        type: string
        description: >-
          This parameter let you customize the appearance of the displayed
          payment pages. Per default a lightweight responsive styling will be
          applied. If you don't want any styling use 'NONE'. Possible values ->
          DEFAULT, SIX, NONE.
        example: DEFAULT
  AddressForm:
    required:
      - Display
    description: Used to have the payer enter his billing address in the payment process.
    properties:
      Display:
        type: boolean
        description: Specifes whether to show address form or not.
      MandatoryFields:
        type: array
        items:
          type: string
        description: >-
          List of fields which the payer must enter to proceed with the payment.
          Possible values -> CITY, COMPANY, COUNTRY, EMAIL, FIRSTNAME, LASTNAME,
          PHONE, SALUTATION, STATE, STREET, ZIP.
        example: FIRSTNAME
  CardForm:
    description: Options for card data entry form (if applicable)
    properties:
      HolderName:
        type: string
        description: >-
          This parameter let you customize the holder name field on the card
          entry form. Per default, a mandatory holder name field is shown.
          Possible values -> NONE, MANDATORY.
        example: MANDATORY
  PaymentPageAssertRequest:
    required:
      - RequestHeader
    properties:
      RequestHeader:
        $ref: '#/definitions/RequestHeader'
      Token:
        type: string
        description: Token returned by initial call.
        example: 234uhfh78234hlasdfh8234e
  PaymentPageAssertResponse:
    required:
      - ResponseHeader
      - Transaction
      - PaymentMeans
    properties:
      ResponseHeader:
        $ref: '#/definitions/ResponseHeader'
      Transaction:
        $ref: '#/definitions/Transaction'
      PaymentMeans:
        $ref: '#/definitions/PaymentMeans'
      Payer:
        $ref: '#/definitions/ResponsePayer'
      RegistrationResult:
        $ref: '#/definitions/RegistrationResult'
      ThreeDs:
        $ref: '#/definitions/ThreeDs'
      Dcc:
        $ref: '#/definitions/Dcc'
  Transaction:
    required:
      - Type
      - Status
      - Id
      - Date
      - Amount
    description: Information about the transaction
    properties:
      Type:
        type: string
        description: Type of transaction. One of 'PAYMENT' Possible values -> PAYMENT.
        example: PAYMENT
      Status:
        type: string
        description: >-
          Current status of the transaction. One of 'AUTHORIZED', 'CAPTURED'
          Possible values -> AUTHORIZED, CAPTURED, PENDING.
        example: AUTHORIZED
      Id:
        type: string
        description: >-
          Unique Saferpay transaction id. Used to reference the transaction in
          any further step.
        example: K5OYS9Ad6Ex4rASU1IM1b3CEU8bb
      Date:
        type: string
        format: date-time
        description: Date / time of the authorization
        example: '2011-09-23T14:57:23.023+02.00'
      Amount:
        $ref: '#/definitions/Amount'
      OrderId:
        type: string
        description: OrderId given with request
        example: c52ad18472354511ab2c33b59e796901
      AcquirerName:
        type: string
        description: Name of the acquirer
        example: AcquirerName
      AcquirerReference:
        type: string
        description: Reference id of the acquirer (if available)
        example: AcquirerReference
      DirectDebit:
        $ref: '#/definitions/DirectDebit'
      Invoice:
        $ref: '#/definitions/Invoice'
  DirectDebit:
    description: 'Direct Debit information, if applicable'
    required:
      - MandateId
      - CreditorId
    properties:
      MandateId:
        type: string
        description: >-
          The unique Mandate reference, required for german direct debit
          payments.
      CreditorId:
        type: string
        description: 'Creditor id, required for german direct debit payments.'
  Invoice:
    description: 'Invoice information, if applicable'
    properties:
      Payee:
        $ref: '#/definitions/Payee'
      ReasonForTransfer:
        type: string
        description: >-
          The reason for transfer to be stated when paying the invoice (transfer
          of funds)
      DueDate:
        type: string
        format: date
        description: The date by which the invoice needs to be settled
  Payee:
    description: >-
      Information about the payee, eg billpay, who is responsible for collecting
      the bill
    properties:
      IBAN:
        type: string
        description: >-
          International Bank Account Number in electronical format (without
          spaces). AlphaNumeric[1..50]
        example: DE12500105170648489890
      HolderName:
        type: string
        description: 'Name of the account holder Iso885915[1..50]'
        example: John Doe
      BIC:
        type: string
        description: 'Bank Identifier Code without spaces. AlphaNumeric[8..11]'
        example: INGDDEFFXXX
      BankName:
        type: string
        description: Name of the Bank
      ReasonForTransfer:
        type: string
        description: >-
          The reason for transfer to be stated when paying the invoice (transfer
          of funds)
      DueDate:
        type: string
        format: date
        description: The date by which the invoice needs to be settled
  PaymentMeans:
    description: Information about the means of payment
    required:
      - Brand
      - DisplayText
    properties:
      Brand:
        $ref: '#/definitions/Brand'
      DisplayText:
        type: string
        description: Means of payment formatted / masked for display purposes
        example: DisplayText
      Wallet:
        type: string
        description: 'Name of Wallet, if the transaction was done by a wallet'
        example: MasterPass
      Card:
        $ref: '#/definitions/MaskedCard'
      BankAccount:
        $ref: '#/definitions/BankAccount'
  TransactionInitializePaymentMeans:
    description: Information about the means of payment
    properties:
      Card:
        $ref: '#/definitions/Card'
      BankAccount:
        $ref: '#/definitions/BankAccount'
      Alias:
        $ref: '#/definitions/RequestAlias'
  Brand:
    description: Brand information
    properties:
      PaymentMethod:
        type: string
        description: >-
          alphanumeric id of the payment method / brand. Possible values ->
          AMEX, BANCONTACT, BONUS, DINERS, DIRECTDEBIT, EPRZELEWY, EPS, GIROPAY,
          IDEAL, INVOICE, JCB, MAESTRO, MASTERCARD, MYONE, PAYPAL, PAYDIREKT,
          POSTCARD, POSTFINANCE, SAFERPAYTEST, SOFORT, VISA, VPAY.
      Name:
        type: string
        description: >-
          Name of the Brand (Visa, Mastercard, an so on – might change over
          time, only use for display, never for parsing). Only use it for
          display, never for parsing and/or mapping! Use PaymentMethod instead.
        example: SaferpayTestCard
  MaskedCard:
    description: Card data
    required:
      - MaskedNumber
      - ExpYear
      - ExpMonth
    properties:
      MaskedNumber:
        type: string
        description: Masked card number
        example: 912345xxxxxx1234
      ExpYear:
        type: integer
        description: Year of expiration
        example: 2015
      ExpMonth:
        type: integer
        description: Month of expiration (eg 9 for September)
        example: 9
      HolderName:
        type: string
        description: Name of the card holder (if known)
        example: John Doe
      CountryCode:
        type: string
        description: ISO 2-letter country code of the card origin (if available)
        example: CH
      HashValue:
        type: string
        description: 'The HashValue, if the hash generation is configured for the customer.'
  Card:
    description: Card data
    required:
      - Number
      - ExpYear
      - ExpMonth
    properties:
      Number:
        type: string
        description: Card number without separators
        example: 912345xxxxxx1234
      ExpYear:
        type: integer
        description: Year of expiration
        example: 2015
      ExpMonth:
        type: integer
        description: Month of expiration (eg 9 for September)
        example: 9
      HolderName:
        type: string
        description: Name of the card holder (if known)
        example: John Doe
      VerificationCode:
        type: string
        description: Verification code (CVV, CVC) if applicable
        example: 123
  BankAccount:
    description: Bank account data for direct debit transactions.
    required:
      - IBAN
    properties:
      IBAN:
        type: string
        description: >-
          International Bank Account Number in electronical format (without
          spaces). AlphaNumeric[1..50]
        example: DE12500105170648489890
      HolderName:
        type: string
        description: 'Name of the account holder Iso885915[1..50]'
        example: John Doe
      BIC:
        type: string
        description: 'Bank Identifier Code without spaces. AlphaNumeric[8..11]'
        example: INGDDEFFXXX
      BankName:
        type: string
        description: Name of the Bank
      CountryCode:
        type: string
        description: ISO 2-letter country code of the Iban origin (if available)
        example: CH
  RegistrationResult:
    description: Information about the Secure Card Data registration outcome.
    required:
      - Success
    properties:
      Success:
        type: boolean
        description: Result of registration
      Alias:
        $ref: '#/definitions/Alias'
      Error:
        $ref: '#/definitions/Error'
  Error:
    description: 'If Success is ''false'', information on why the registration failed'
    properties:
      ErrorName:
        type: string
        description: Name / id of the error.
        example: ErrorName
      ErrorMessage:
        type: string
        description: Description of the error.
        example: ErrorMessage
  Alias:
    description: 'If Success is ''true'', information about the alias'
    required:
      - Id
      - Lifetime
    properties:
      Id:
        type: string
        description: Id / name of alias
        example: alias35nfd9mkzfw0x57iwx
      Lifetime:
        type: integer
        description: >-
          Number of days this card is stored within Saferpay. Minimum 1 day,
          maximum 1600 days.
        example: 1000
  RequestAlias:
    description: 'If Success is ''true'', information about the alias'
    required:
      - Id
      - VerificationCode
    properties:
      Id:
        type: string
        description: Id / name of alias
        example: alias35nfd9mkzfw0x57iwx
      VerificationCode:
        type: string
        description: >-
          Verification code (CVV, CVC) if applicable (ie the alias referenced is a card).
        example: 123
  ThreeDs:
    description: 3d-secure information if applicable
    required:
      - Authenticated
      - LiabilityShift
      - Xid
    properties:
      Authenticated:
        type: boolean
        description: >-
          Indicates, whether the payer has successfuly authenticated him/herself
          or not.
      LiabilityShift:
        type: boolean
        description: >-
          Indicates whether liability shift to issuer is possible or not. Not
          present if PaymentMeans container was not present in Initialize
          request. True, if liability shift to issuer is possible, false if not
          (only SSL transaction). Please note, that the authentification can be
          true, but the liabilityshift is false. The issuer has the right to
          deny the liabiliy shift during the authorization. You can continue to
          capture the payment here, but we recommend to cancel unsecure
          payments.
      Xid:
        type: string
        description: >-
          BASE64 encoded value, given by the MPI. References the 3D Secure
          process.
        example: ARkvCgk5Y1t/BDFFXkUPGX9DUgs=
      VerificationValue:
        type: string
        description: Mandatory if Authenticated is true
        example: AAABBIIFmAAAAAAAAAAAAAAAAAA=
  Dcc:
    description: 'Dcc information, if applicable'
    required:
      - PayerAmount
    properties:
      PayerAmount:
        $ref: '#/definitions/Amount'
  Redirect:
    description: >-
     Mandatory if RedirectRequired is true. Contains the URL for the redirect
     to use for example the Saferpay hosted register form.
    required:
      - RedirectUrl
      - PaymentMeansRequired
    properties:
      RedirectUrl:
        type: string
        description: >-
          Redirect-URL. Used to either redirect the payer or let him enter his
          means of payment.
        example: https://www.saferpay.com/VT2/api/...
      PaymentMeansRequired:
        type: boolean
        description: >-
          True, if the given URL must be used as the target of a form
          containing card data entered by the card holder. If ‘false’, either
          a GET or POST redirect without additional data may be performed.
  TransactionReference:
    description: Reference to authorization.
    properties:
      TransactionId:
        type: string
        description: Id of the referenced transaction.
        example: 723n4MAjMdhjSAhAKEUdA8jtl9jb
      OrderId:
        type: string
        description: Unambiguous OrderId of the referenced transaction.
        example: c52ad18472354511ab2c33b59e796901
  Partial:
    description: >-
      Optional partial capture options.
      Note - Partial-Captures are only available with PayPal!
    required:
        - Type
        - OrderPartId
    properties:
      Type:
        type: string
        description: >-
          PARTIAL' if more captures should be possible later on, 'FINAL' if no
          more captures will be done on this authorization.
          Possible values -> PARTIAL, FINAL.
      OrderPartId:
        type: string
        description: >-
          Must be unique. It identifies each individual step and is especially
          important for follow-up actions such as refund.
        example: kh9ngajrfe6wfu3d0c
  PendingNotification:
    description:
      Optional pending notification capture options for Paydirekt transactions.
    properties:
      MerchantEmail:
        type: string
        description: >-
          Email which will be notified by Saferpay if an action could not be
          completed synchronously and was reported with a ‘pending’
          state (eg CAPTURE_PENDING). Up until now, this is only applicable
          for Paydirekt transactions.
        example: merchant@saferpay.com
      NotifyUrl:
        type: string
        description: >-
          Url which is called by Saferpay if an action could not be completed
          synchronously and was reported with a ‘pending’ state
          (eg CAPTURE_PENDING). Up until now, this is only applicable for
          Paydirekt transactions.
        example: https://merchanthost/pendingnotify
  Refund:
    description:
      Information about the refund (amount, currency, ...)
    properties:
      Amount:
        $ref: '#/definitions/Amount'
      OrderId:
        type: string
        description: >-
          Reference defined by the merchant.
        example: c52ad18472354511ab2c33b59e796901
      Description:
        type: string
        description: >-
          Description provided by merchant.
        example: Description
  SaferpayErrorMessage:
    required:
      - ResponseHeader
      - ErrorName
      - ErrorMessage
    properties:
      ResponseHeader:
        $ref: '#/definitions/ResponseHeader'
      Behavior:
        type: string
      ErrorName:
        type: string
      ErrorMessage:
        type: string
      TransactionId:
        type: string
      ErrorDetail:
        type: array
        items:
          type: string
      ProcessorName:
       type: string
      ProcessorResult:
       type: string
      ProcessorMessage:
       type: string
host: test.saferpay.com
basePath: /api/Payment/v1
